[
  {
    "objectID": "simple_example.html",
    "href": "simple_example.html",
    "title": "Template for r-shinylive Quarto document (Covid Example)",
    "section": "",
    "text": "#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 600\n#| layout: full\n\nlibrary(tidyr)\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(shinyWidgets)\n\n# Download real COVID data for Washington state counties from the New York Times GitHub repo\ncovid_url &lt;- \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\ncovid_data &lt;- read.csv(covid_url)\n\n# Filter for Washington state and prepare the data\nwashington_covid_data &lt;- covid_data %&gt;%\n  filter(state == \"Washington\") %&gt;%\n  select(date, county, cases) %&gt;%\n  mutate(year_month = format(as.Date(date), \"%Y%m\"))  # Create year_month column\n\n# Preprocess the data to ensure all counties and year-month combinations are present\nwashington_covid_data &lt;- washington_covid_data %&gt;%\n  # Create a complete dataset with all combinations of counties and year-month\n  complete(county = unique(washington_covid_data$county),\n           year_month = unique(washington_covid_data$year_month),\n           fill = list(cases = 0))\n\n# Create a vector of unique year_month values from the dataset\nvalid_year_months &lt;- sort(unique(washington_covid_data$year_month))\nvalid_year_months_index &lt;- seq_along(valid_year_months)\n\n# Define the UI\nui &lt;- fluidPage(\n  titlePanel(\"COVID Case Counts by Month-Year in Washington Counties\"),\n  \n  # Use fluidRow to place the slider at the top, spanning the entire page width\n  fluidRow(\n    column(12,  # 12 columns to span full width\n      sliderTextInput(\"selected_year_month\", \n                      \"Select Year and Month:\", \n                      choices = valid_year_months,  # Use year-month values directly\n                      selected = \"202001\",  # Start with the first year-month\n                      animate = animationOptions(interval = 1000, loop = FALSE))\n    )\n  ),\n  \n  # Main panel for the plot below the slider\n  fluidRow(\n    column(12,  # This will also span the entire width\n      plotOutput(\"histogramPlot\")\n    )\n  )\n)\n\n\n# Define the server\nserver &lt;- function(input, output) {\n  output$histogramPlot &lt;- renderPlot({\n    filtered_data &lt;- washington_covid_data %&gt;%\n      filter(year_month == as.character(input$selected_year_month)) %&gt;%\n      group_by(county) %&gt;%\n      summarize(total_cases = max(cases, na.rm = TRUE))  # Get max case count for each county in the selected year_month\n    \n    ggplot(filtered_data, aes(x = county, y = total_cases)) +\n      geom_bar(stat = \"identity\", fill = \"steelblue\") +\n       scale_y_log10(\n        breaks = c(1, 10, 100, 1000, 10000, 100000, 1000000),\n        labels = c(\"1\", \"10\", \"100\", \"1k\", \"10k\", \"100k\", \"1M\")\n      ) +\n      labs(title = paste(\"COVID Cases in\", input$selected_year_month),\n           x = \"County\", \n           y = \"Total Case Count\") +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  })\n}\n\n# Run the Shiny app\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "simple_example.html#how-to-use-quarto-to-display-a-shinyapp-for-your-example",
    "href": "simple_example.html#how-to-use-quarto-to-display-a-shinyapp-for-your-example",
    "title": "Template for r-shinylive Quarto document (Covid Example)",
    "section": "How to use Quarto to display a shinyapp for your example:",
    "text": "How to use Quarto to display a shinyapp for your example:\n---\ntitle: \"Template for r-shinylive Quarto document (Covid Example)\"\nformat:\n  html:\n    resources: \n      - shinylive-sw.js\nfilters:\n  - shinylive\n---\n\n```{shinylive-r}\n#| standalone: true\n#| viewerHeight: 600\n#| layout: full\n\nlibrary(tidyr)\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(shinyWidgets)\n\n# Download real COVID data for Washington state counties from the New York Times GitHub repo\ncovid_url &lt;- \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\ncovid_data &lt;- read.csv(covid_url)\n\n# Filter for Washington state and prepare the data\nwashington_covid_data &lt;- covid_data %&gt;%\n  filter(state == \"Washington\") %&gt;%\n  select(date, county, cases) %&gt;%\n  mutate(year_month = format(as.Date(date), \"%Y%m\"))  # Create year_month column\n\n# Preprocess the data to ensure all counties and year-month combinations are present\nwashington_covid_data &lt;- washington_covid_data %&gt;%\n  # Create a complete dataset with all combinations of counties and year-month\n  complete(county = unique(washington_covid_data$county),\n           year_month = unique(washington_covid_data$year_month),\n           fill = list(cases = 0))\n# Create a vector of unique year_month values from the dataset\nvalid_year_months &lt;- sort(unique(washington_covid_data$year_month))\nvalid_year_months_index &lt;- seq_along(valid_year_months)\n\n# Define the UI\nui &lt;- fluidPage(\n  titlePanel(\"COVID Case Counts by Month-Year in Washington Counties\"),\n  \n  # Use fluidRow to place the slider at the top, spanning the entire page width\n  fluidRow(\n    column(12,  # 12 columns to span full width\n      sliderTextInput(\"selected_year_month\", \n                      \"Select Year and Month:\", \n                      choices = valid_year_months,  # Use year-month values directly\n                      selected = \"202001\",  # Start with the first year-month\n                      animate = animationOptions(interval = 1000, loop = FALSE))\n    )\n  ),\n  \n  # Main panel for the plot below the slider\n  fluidRow(\n    column(12,  # This will also span the entire width\n      plotOutput(\"histogramPlot\")\n    )\n  )\n)\n\n\n# Define the server\nserver &lt;- function(input, output) {\n  output$histogramPlot &lt;- renderPlot({\n    filtered_data &lt;- washington_covid_data %&gt;%\n      filter(year_month == as.character(input$selected_year_month)) %&gt;%\n      group_by(county) %&gt;%\n      summarize(total_cases = max(cases, na.rm = TRUE))  # Get max case count for each county in the selected year_month\n    \n    ggplot(filtered_data, aes(x = county, y = total_cases)) +\n      geom_bar(stat = \"identity\", fill = \"steelblue\") +\n      scale_y_log10(\n        breaks = c(1, 10, 100, 1000, 10000, 100000, 1000000),\n        labels = c(\"1\", \"10\", \"100\", \"1k\", \"10k\", \"100k\", \"1M\")\n      ) +\n      labs(title = paste(\"COVID Cases in\", input$selected_year_month),\n           x = \"County\", \n           y = \"Total Case Count\") +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  })\n}\n\n# Run the Shiny app\nshinyApp(ui = ui, server = server)\n```"
  },
  {
    "objectID": "simple_example.html#step-by-step-explanation",
    "href": "simple_example.html#step-by-step-explanation",
    "title": "Template for r-shinylive Quarto document (Covid Example)",
    "section": "Step-by-step Explanation:",
    "text": "Step-by-step Explanation:\n This is a demo of a Shiny app embedded in a Quarto document using the shinylive filter. The app displays COVID case counts by month-year in Washington state counties. Use the slider to select a month-year and see the case counts for each county in that month-year period. \nThe code first import the libraries:\n\nlibrary(tidyr)\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(shinyWidgets)\n\nNext, it downloads real COVID data for Washington state counties from the New York Times GitHub repo and prepares the data. The data is filtered for Washington state and a new column year_month is created to group the data by month-year.\n\ncovid_url &lt;- \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\ncovid_data &lt;- read.csv(covid_url)\n\n# Filter for Washington state and prepare the data\nwashington_covid_data &lt;- covid_data %&gt;%\n  filter(state == \"Washington\") %&gt;%\n  select(date, county, cases) %&gt;%\n  mutate(year_month = format(as.Date(date), \"%Y%m\"))  # Create year_month column\n\n# Create a vector of unique year_month values from the dataset\nvalid_year_months &lt;- sort(unique(washington_covid_data$year_month))\n\nNow, We can create a simple UI with shiny with a slider of values from the “valid_year_months” and a histogram output to display the data for the selected period.\n\nui &lt;- fluidPage(\n  titlePanel(\"COVID Case Counts by Month-Year in Washington Counties\"),\n  \n  # Use fluidRow to place the slider at the top, spanning the entire page width\n  fluidRow(\n    column(12,  # 12 columns to span full width\n      sliderTextInput(\"selected_year_month\", \n                      \"Select Year and Month:\", \n                      choices = valid_year_months,  # Use year-month values directly\n                      selected = \"202001\",  # Start with the first year-month\n                      animate = animationOptions(interval = 1000, loop = FALSE))\n    )\n  ),\n  \n  # Main panel for the plot below the slider\n  fluidRow(\n    column(12,  # This will also span the entire width\n      plotOutput(\"histogramPlot\")\n    )\n  )\n)\n\nFinally, we define the server function to render the plot based on the selected month-year. The plot shows the total case count for each county in the selected month-year. noted that the input$selected_year_month corresponds to the value of UI slider defined above. We first filtered the data to that period of time and get the max of number of cases. (Which is equvalent to the cumulated number of cases during that month-year.) ggplot is used to create the bar plot and the County column is used in X axis.\n\nserver &lt;- function(input, output) {\n  output$histogramPlot &lt;- renderPlot({\n    filtered_data &lt;- washington_covid_data %&gt;%\n      filter(year_month == as.character(input$selected_year_month)) %&gt;%\n      group_by(county) %&gt;%\n      summarize(total_cases = max(cases, na.rm = TRUE))  # Get max case count for each county in the selected year_month\n    \n    ggplot(filtered_data, aes(x = county, y = total_cases)) +\n      geom_bar(stat = \"identity\", fill = \"steelblue\") +\n      labs(title = paste(\"COVID Cases in\", input$selected_year_month),\n           x = \"County\", \n           y = \"Total Case Count\") +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  })\n}"
  }
]